{"version":3,"sources":["webpack:///./src/pages/poppy_robot.jsx","webpack:///./src/components/simpleimage/singleitem/singleitem.css.js","webpack:///./src/components/simpleimage/singleitem/singleitem.js","webpack:///./src/components/simpleimage/simpleimage.css.js","webpack:///./src/components/simpleimage/simpleimage.js"],"names":["poppy_robot","data","singleitem","homeJson","poppy_robot_single","poppy_twodof","newquery","styled","span","p","MEDIA","TABLET","Singleitem","title","image","copy","fluid","childImageSharp","alt","Singlecontainer","div","Simpleimage"],"mappings":"4FAAA,iGAkDeA,UA7CK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,kBAAC,IAAD,KACA,6BACE,8FACA,kBAAC,IAAD,CAAaC,WAAYD,EAAKE,SAASC,qBACvC,+DAHF,87BAiBF,kBAAC,IAAD,CAAaF,WAAYD,EAAKE,SAASE,eACvC,6CACA,2CAnBE,qfAwBF,0CAxBE,kiBA8BF,gDA9BE,2NAkCF,yCAlCE,oVA4CK,IAAMC,EAAQ,c,ifChDAC,IAAOC,KAAV,KAOED,IAAOE,EAAV,IAIbC,IAAMC,OAJO,MAPV,ICkBQC,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAaC,GAAhB,EAAUC,KAAV,EAAgBD,OAAhB,OACjB,uCAEK,kBAAC,IAAD,CAAKE,MAAOF,EAAQA,EAAMG,gBAAgBD,MAAQ,GAAIE,IAAKL,IAC9D,8C,iTCNG,IAAMM,EAAkBZ,IAAOa,IAAV,IAOxBV,IAAMC,OAPkB,MCYbU,IAVK,SAAC,GAAD,IAAGnB,EAAH,EAAGA,WAAH,OACpB,kBAACiB,EAAD,KACI,kBAAC,EAAejB","file":"component---src-pages-poppy-robot-jsx-35d8d42cfac4e6e1dae0.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/layout';\nimport Simpleimage from 'components/simpleimage';\n\nconst poppy_robot = ({ data }) => (\n  <Layout>\n  <div>\n    <h1> Standing humanoïd robot : The Poppy Challenge – Team project </h1>\n    <Simpleimage singleitem={data.homeJson.poppy_robot_single} />\n    <h2> What kind of challenge is it ?</h2>\n    The Poppy Challenge is a four months long competition organized by Dassault Systemes, the goal is to keep the robot standing on\nhis feet and make him able to resist small disturbances such as pats/slaps. To implement a control law, we are allowed to use the famous 3D\nprinted robot Poppy which is proportionally sized like a human.\nWe have access to the robot’s ankles and hips which are equipped with servo-motors, thus we may consider an analogy with the double\nreverse pendulum.\npoppy-robot-pendulum\nPoppy robot – model\nEquation\nEquation of the double reverse pendulum’s dynamic\nM is the mass matrix - C corresponds to the Coriolis terms - g represents gravity\nτ is the motors' torque vector - q=[α1,α2] matches with hips and ankles angles\nAs it appears on the figure above, we need to keep our angles set on π/2 to stand straight in this plane problem. To achieve the challenge, we\ncan monitor our motors’ torques and get their position as a feedback.\n<Simpleimage singleitem={data.homeJson.poppy_twodof} />\n<h2> Control law </h2>\n<h3>PID control</h3>\nThe PID control is by far the most commonly used control law. It is quite simple to configure and even if it is not optimized it still works\nwell if the system is not too complex. It has 3 main performance criteria : robustness, speed and accuracy.\nHowever, even if it may seem easy to implement a control law here, we should be careful about the hypothesis we make. Poppy has got 2\nlegs, 1 chest and 2 arms, so considering it as a plane problem will definitely decrease our control law robustness.\n<h3>LQ control</h3>\nThe Linear Quadratic control law distinguishes from PID control by defining a single criterion performance which is a function of each\nvariable involved. Not only does it take each variable into account, but also their interdependencies. For this reason, the LQ control focuses\nmore on the system’s robustness than its accuracy and speed.\nTo apply the analogy of the double reverse pendulum, we must consider the robustness as the main issue. Plus, accuracy and speed are not\nrelevant in the challenge so we choose to implement the LQ control.\n<h2>The 3DExperience</h2>\nDassault Systemes shared the 3DExperience with us. It is a tool designed to answer the needs of the industry 4.0, it includes advanced\nversions of several well-known CAD softwares such as Catia and Solidworks.\nsystem\n<h2>3DS Model</h2>\nWe used it to implement the LQ control law we designed on Matlab. Then we had access to the robot through the software and we were able\nto test our automatic control in real time on Poppy. To avoid any injury during the tests, Poppy’s feet were fixed and his chest had a safety\ncord.\nYou can find the results of my winning team here :    \n\n</div>\n  </Layout>\n);\nexport default poppy_robot;\nexport const newquery = graphql`\n\n  query PoppyQuery {\n    homeJson \n    {\n      poppy_robot_single \n      {\n        link\n        title\n        copy\n        image {\n          childImageSharp \n          {\n            fluid(maxWidth: 2000, quality: 90) \n            {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n      poppy_twodof\n      {\n        link\n        title\n        copy\n        image\n        {\n          childImageSharp\n          {\n            fluid(maxWidth: 2000, quality: 90)\n            {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n`;","import styled from 'styled-components';\nimport MEDIA from 'helpers/mediaTemplates';\n\nexport const Title = styled.span`\n  display: block;\n  font-size: 2rem;\n  font-weight: 500;\n  margin: 2rem 2rem 1rem;\n`;\n\nexport const Copy = styled.p`\n  color: #757575;\n  margin: 0 2rem 2rem;\n\n  ${MEDIA.TABLET`\n    margin-bottom: 4rem;\n  `};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image';\nimport { Title, Copy } from './singleitem.css';\n\nconst Singleitem = ({ title, copy, image }) => (\n  <figure>\n{/*      <Title>{title}</Title>\n*/}    <Img fluid={image ? image.childImageSharp.fluid : {}} alt={title} />\n    <figcaption>\n{/*      <Copy>{copy}</Copy>\n*/}    </figcaption>\n  </figure>\n);\n\nSingleitem.propTypes = {\n  title: PropTypes.string,\n  copy: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nexport default Singleitem;\n","import styled from 'styled-components';\nimport MEDIA from 'helpers/mediaTemplates';\n\nexport const Singlecontainer = styled.div`\n  display: grid;\n  grid-template-columns: minmax(400px, max-content);\n  grid-gap: 1rem;\n  padding: 0 4rem;\n  margin: 1rem 0;\n\n  ${MEDIA.TABLET`\n    display: block;\n  `};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Singleitem from 'components/simpleimage/singleitem';\nimport { Singlecontainer } from './simpleimage.css';\n\nconst Simpleimage = ({ singleitem }) => (\n<Singlecontainer>\n    <Singleitem {...singleitem}/>\n</Singlecontainer>    \n);\n\nSimpleimage.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Simpleimage;\n"],"sourceRoot":""}