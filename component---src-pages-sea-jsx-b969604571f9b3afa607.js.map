{"version":3,"sources":["webpack:///./src/components/simpleimage/singleitem/singleitem.css.js","webpack:///./src/components/simpleimage/singleitem/singleitem.js","webpack:///./src/components/simpleimage/simpleimage.css.js","webpack:///./src/components/simpleimage/simpleimage.js","webpack:///./src/pages/SEA.jsx"],"names":["styled","span","p","MEDIA","TABLET","Singleitem","title","image","copy","fluid","childImageSharp","alt","Singlecontainer","div","Simpleimage","singleitem","SEA","data","homeJson","sea_principle","SEA_farm","SEA_single","SEA_system","SEAquery"],"mappings":"2iBAGqBA,IAAOC,KAAV,KAOED,IAAOE,EAAV,IAIbC,IAAMC,OAJO,MAPV,ICkBQC,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAaC,GAAhB,EAAUC,KAAV,EAAgBD,OAAhB,OACjB,uCAEK,kBAAC,IAAD,CAAKE,MAAOF,EAAQA,EAAMG,gBAAgBD,MAAQ,GAAIE,IAAKL,IAC9D,8C,iTCNG,IAAMM,EAAkBZ,IAAOa,IAAV,IAOxBV,IAAMC,OAPkB,MCYbU,IAVK,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACpB,kBAACH,EAAD,KACI,kBAAC,EAAeG,M,kCCPpB,iGAuDeC,UAlDH,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACV,kBAAC,IAAD,KACE,6BACA,8EACJ,kDAFI,+RAMJ,kBAAC,IAAD,CAAaF,WAAYE,EAAKC,SAASC,gBANnC,wSAUJ,wDAVI,k/BAoBJ,+CApBI,2cA0BA,kBAAC,IAAD,CAAaJ,WAAYE,EAAKC,SAASE,WA1BvC,4/BAwCA,kBAAC,IAAD,CAAaL,WAAYE,EAAKC,SAASG,aAxCvC,iRA4CQ,kBAAC,IAAD,CAAaN,WAAYE,EAAKC,SAASI,gBAK5C,IAAMC,EAAQ","file":"component---src-pages-sea-jsx-b969604571f9b3afa607.js","sourcesContent":["import styled from 'styled-components';\nimport MEDIA from 'helpers/mediaTemplates';\n\nexport const Title = styled.span`\n  display: block;\n  font-size: 2rem;\n  font-weight: 500;\n  margin: 2rem 2rem 1rem;\n`;\n\nexport const Copy = styled.p`\n  color: #757575;\n  margin: 0 2rem 2rem;\n\n  ${MEDIA.TABLET`\n    margin-bottom: 4rem;\n  `};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image';\nimport { Title, Copy } from './singleitem.css';\n\nconst Singleitem = ({ title, copy, image }) => (\n  <figure>\n{/*      <Title>{title}</Title>\n*/}    <Img fluid={image ? image.childImageSharp.fluid : {}} alt={title} />\n    <figcaption>\n{/*      <Copy>{copy}</Copy>\n*/}    </figcaption>\n  </figure>\n);\n\nSingleitem.propTypes = {\n  title: PropTypes.string,\n  copy: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nexport default Singleitem;\n","import styled from 'styled-components';\nimport MEDIA from 'helpers/mediaTemplates';\n\nexport const Singlecontainer = styled.div`\n  display: grid;\n  grid-template-columns: minmax(400px, max-content);\n  grid-gap: 1rem;\n  padding: 0 4rem;\n  margin: 1rem 0;\n\n  ${MEDIA.TABLET`\n    display: block;\n  `};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Singleitem from 'components/simpleimage/singleitem';\nimport { Singlecontainer } from './simpleimage.css';\n\nconst Simpleimage = ({ singleitem }) => (\n<Singlecontainer>\n    <Singleitem {...singleitem}/>\n</Singlecontainer>    \n);\n\nSimpleimage.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Simpleimage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'components/layout';\nimport Simpleimage from 'components/simpleimage';\n\nconst SEA = ({ data }) => (\n  <Layout>\n    <div>\n    <h1> Series Elastic Actuator (SEA) – Team project </h1>\n<h2>What is at stake ?</h2>\nAs I first wanted to involve myself into robotics, I found an opportunity to study a technology called Series Elastic Actuator which has\nbeen developed by the MIT.\nThe principle is very simple, it consists in adding an elastic component between the load and the motor, as shown below.\n<Simpleimage singleitem={data.homeJson.sea_principle} />\nThe worldwide industry never fails to show us how advanced robotics has become. While our eyes can barely follow up with a robot\naccomplishing its manufacturing operations, adding elastic components would mostly diminish the all system efficiency by decreasing its\nprecision and repeatability.\n<h2>A new compromise to make</h2>\nThus, one may wonder why would we put so much interest in elasticity, specially when it is linked to actuators which we like to keep\naccurate ? This actually makes sense when one considers the problems of tomorrow’s world.\nAs part of a classical industrial application, engineers avoid security issues by defining areas forbidden to humans. Plus, they are almost\nnot concerned by accidents since the environment is well defined and regulated, which means that those engineers are able to predict quite\nprecisely how each robot is going to deteriorate.\nHowever, robots are no longer seen as simple tools set away from humans and confined to sheds. Collaborative robots and advanced AI\nhave emerged, robots start interacting with their environment and pave the way to more usability everyday.\nHere we are going to study the damages of bumps on a moving rigid system. Indeed,\nrigidity implies low shock tolerance which is very concerning because actuators are not designed to endure much external disturbances.\n<h2>Design of a SEA</h2>\nThereby, my project was to design a one meter long robotic arm, later assembled on a mobile platform which drives along a farm field in\norder to interact with agricultural plantation. In this case, the lack of knowledge about the farm surface makes it impossible to prevent\nthe driving rigid system from being damaged by bumps. This is why it is become interesting to introduce an elastic component behaving\nas a low-pass filter toward those perturbations.\n\n    <Simpleimage singleitem={data.homeJson.SEA_farm} />\nThere are two main technologies linked with SEAs, rotary and linear.\nLinear SEAs can either place the elastic component between the load and the gearbox, in which case it is called FSEA (Force Sensing SEA),\nor place it between the motor and the chassis, in which case it is called RFSEA (Reaction Force Sensing SEA).\nTo ensure that the shocks are entirely supported by the compliant element (a spring here), we chose to study the FSEA technology which is\nexplained below.\nDesign FSEA\nDesign FSEA\nAs the motor provides a torque to the first pulley, the worm gear assembled with the second pulley will allow the desired piece of the system\nto move linearly with the attached load.\nRotary SEAs can either use a torsion or a compression spring, in this case we chose a torsion spring because of its disposability to mesure a\ngiven shock more precisely.\nThe rotary solution is the easiest to prototype because of its simple assembly. However, it requires a more powerful motor because of the less\neffective reducer system.\n    <Simpleimage singleitem={data.homeJson.SEA_single} />\nHere is a visualization of the final render of our work as a team in this project :\nCAD of the robotic arm provided with an SEA\nA demonstration of SEA’s efficiency lies in the Valkyrie which is a 44 degree of freedom robot based on series elastic actuators.\nValkyrie    <Simpleimage singleitem={data.homeJson.SEA_system} />\n</div>\n  </Layout>\n);\nexport default SEA;\nexport const SEAquery = graphql`\n  query SEAPenQuery {\n    homeJson \n    {\n      SEA_single \n      {\n        link\n        title\n        copy\n        image {\n          childImageSharp \n          {\n            fluid(maxWidth: 2000, quality: 90) \n            {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n      sea_principle\n      {\n        link\n        title\n        copy\n        image {\n          childImageSharp \n          {\n            fluid(maxWidth: 2000, quality: 90) \n            {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n      SEA_farm\n      {\n        link\n        title\n        copy\n        image\n        {\n          childImageSharp\n          {\n            fluid(maxWidth: 2000, quality: 90)\n            {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n      SEA_system\n      {\n        link\n        title\n        copy\n        image\n        {\n          childImageSharp\n          {\n            fluid(maxWidth: 2000, quality: 90)\n            {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n`;"],"sourceRoot":""}